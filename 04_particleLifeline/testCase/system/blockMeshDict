/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// General macros to create 2D/extruded-2D meshes












// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

// Hub radius


// Impeller-tip radius


// Baffle-tip radius


// Tank radius


// MRF region radius


// Thickness of 2D slab


// Base z


// Top z


// Number of cells radially between hub and impeller tip


// Number of cells radially in each of the two regions between
// impeller and baffle tips


// Number of cells radially between baffle tip and tank


// Number of cells azimuthally in each of the 8 blocks


// Number of cells in the thickness of the slab


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //














































































































































































































































// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    (0.2 0 0) // Vertex r0b = 0 
    (0.2 0 0) // Vertex r0sb = 1 
    (0.141421356364228 -0.141421356110391 0) // Vertex r1b = 2 
    (3.58979302984162e-10 -0.2 0) // Vertex r2b = 3 
    (3.58979302984162e-10 -0.2 0) // Vertex r2sb = 4 
    (-0.141421355856554 -0.141421356618065 0) // Vertex r3b = 5 
    (-0.2 7.17958605968322e-10 0) // Vertex r4b = 6 
    (-0.2 7.17958605968322e-10 0) // Vertex r4sb = 7 
    (-0.141421355856554 0.141421356618065 0) // Vertex r5b = 8 
    (3.58979302984162e-10 0.2 0) // Vertex r6b = 9 
    (3.58979302984162e-10 0.2 0) // Vertex r6sb = 10 
    (0.141421356364228 0.141421356110391 0) // Vertex r7b = 11 

    (0.5 0 0) // Vertex rb0b = 12 
    (0.353553390910569 -0.353553390275978 0) // Vertex rb1b = 13 
    (8.97448257460405e-10 -0.5 0) // Vertex rb2b = 14 
    (-0.353553389641386 -0.353553391545162 0) // Vertex rb3b = 15 
    (-0.5 1.79489651492081e-09 0) // Vertex rb4b = 16 
    (-0.353553389641386 0.353553391545162 0) // Vertex rb5b = 17 
    (8.97448257460405e-10 0.5 0) // Vertex rb6b = 18 
    (0.353553390910569 0.353553390275978 0) // Vertex rb7b = 19 

    (0.6 0 0) // Vertex ri0b = 20 
    (0.424264069092683 -0.424264068331174 0) // Vertex ri1b = 21 
    (1.07693790895249e-09 -0.6 0) // Vertex ri2b = 22 
    (-0.424264067569663 -0.424264069854194 0) // Vertex ri3b = 23 
    (-0.6 2.15387581790497e-09 0) // Vertex ri4b = 24 
    (-0.424264067569663 0.424264069854194 0) // Vertex ri5b = 25 
    (1.07693790895249e-09 0.6 0) // Vertex ri6b = 26 
    (0.424264069092683 0.424264068331174 0) // Vertex ri7b = 27 

    (0.6 0 0) // Vertex ris0b = 28 
    (0.424264069092683 -0.424264068331174 0) // Vertex ris1b = 29 
    (1.07693790895249e-09 -0.6 0) // Vertex ris2b = 30 
    (-0.424264067569663 -0.424264069854194 0) // Vertex ris3b = 31 
    (-0.6 2.15387581790497e-09 0) // Vertex ris4b = 32 
    (-0.424264067569663 0.424264069854194 0) // Vertex ris5b = 33 
    (1.07693790895249e-09 0.6 0) // Vertex ris6b = 34 
    (0.424264069092683 0.424264068331174 0) // Vertex ris7b = 35 

    (0.7 0 0) // Vertex Rb0b = 36 
    (0.494974747274797 -0.494974746386369 0) // Vertex Rb1b = 37 
    (1.25642756044457e-09 -0.7 0) // Vertex Rb2b = 38 
    (-0.49497474549794 -0.494974748163226 0) // Vertex Rb3b = 39 
    (-0.7 2.51285512088913e-09 0) // Vertex Rb4b = 40 
    (-0.49497474549794 0.494974748163226 0) // Vertex Rb5b = 41 
    (1.25642756044457e-09 0.7 0) // Vertex Rb6b = 42 
    (0.494974747274797 0.494974746386369 0) // Vertex Rb7b = 43 

    (1 0 0) // Vertex R0b = 44 
    (0.707106781821139 -0.707106780551956 0) // Vertex R1b = 45 
    (0.707106781821139 -0.707106780551956 0) // Vertex R1sb = 46 
    (1.79489651492081e-09 -1 0) // Vertex R2b = 47 
    (-0.707106779282772 -0.707106783090323 0) // Vertex R3b = 48 
    (-0.707106779282772 -0.707106783090323 0) // Vertex R3sb = 49 
    (-1 3.58979302984161e-09 0) // Vertex R4b = 50 
    (-0.707106779282772 0.707106783090323 0) // Vertex R5b = 51 
    (-0.707106779282772 0.707106783090323 0) // Vertex R5sb = 52 
    (1.79489651492081e-09 1 0) // Vertex R6b = 53 
    (0.707106781821139 0.707106780551956 0) // Vertex R7b = 54 
    (0.707106781821139 0.707106780551956 0) // Vertex R7sb = 55 

    (0.2 0 0.1) // Vertex r0t = 56 
    (0.2 0 0.1) // Vertex r0st = 57 
    (0.141421356364228 -0.141421356110391 0.1) // Vertex r1t = 58 
    (3.58979302984162e-10 -0.2 0.1) // Vertex r2t = 59 
    (3.58979302984162e-10 -0.2 0.1) // Vertex r2st = 60 
    (-0.141421355856554 -0.141421356618065 0.1) // Vertex r3t = 61 
    (-0.2 7.17958605968322e-10 0.1) // Vertex r4t = 62 
    (-0.2 7.17958605968322e-10 0.1) // Vertex r4st = 63 
    (-0.141421355856554 0.141421356618065 0.1) // Vertex r5t = 64 
    (3.58979302984162e-10 0.2 0.1) // Vertex r6t = 65 
    (3.58979302984162e-10 0.2 0.1) // Vertex r6st = 66 
    (0.141421356364228 0.141421356110391 0.1) // Vertex r7t = 67 

    (0.5 0 0.1) // Vertex rb0t = 68 
    (0.353553390910569 -0.353553390275978 0.1) // Vertex rb1t = 69 
    (8.97448257460405e-10 -0.5 0.1) // Vertex rb2t = 70 
    (-0.353553389641386 -0.353553391545162 0.1) // Vertex rb3t = 71 
    (-0.5 1.79489651492081e-09 0.1) // Vertex rb4t = 72 
    (-0.353553389641386 0.353553391545162 0.1) // Vertex rb5t = 73 
    (8.97448257460405e-10 0.5 0.1) // Vertex rb6t = 74 
    (0.353553390910569 0.353553390275978 0.1) // Vertex rb7t = 75 

    (0.6 0 0.1) // Vertex ri0t = 76 
    (0.424264069092683 -0.424264068331174 0.1) // Vertex ri1t = 77 
    (1.07693790895249e-09 -0.6 0.1) // Vertex ri2t = 78 
    (-0.424264067569663 -0.424264069854194 0.1) // Vertex ri3t = 79 
    (-0.6 2.15387581790497e-09 0.1) // Vertex ri4t = 80 
    (-0.424264067569663 0.424264069854194 0.1) // Vertex ri5t = 81 
    (1.07693790895249e-09 0.6 0.1) // Vertex ri6t = 82 
    (0.424264069092683 0.424264068331174 0.1) // Vertex ri7t = 83 

    (0.6 0 0.1) // Vertex ris0t = 84 
    (0.424264069092683 -0.424264068331174 0.1) // Vertex ris1t = 85 
    (1.07693790895249e-09 -0.6 0.1) // Vertex ris2t = 86 
    (-0.424264067569663 -0.424264069854194 0.1) // Vertex ris3t = 87 
    (-0.6 2.15387581790497e-09 0.1) // Vertex ris4t = 88 
    (-0.424264067569663 0.424264069854194 0.1) // Vertex ris5t = 89 
    (1.07693790895249e-09 0.6 0.1) // Vertex ris6t = 90 
    (0.424264069092683 0.424264068331174 0.1) // Vertex ris7t = 91 

    (0.7 0 0.1) // Vertex Rb0t = 92 
    (0.494974747274797 -0.494974746386369 0.1) // Vertex Rb1t = 93 
    (1.25642756044457e-09 -0.7 0.1) // Vertex Rb2t = 94 
    (-0.49497474549794 -0.494974748163226 0.1) // Vertex Rb3t = 95 
    (-0.7 2.51285512088913e-09 0.1) // Vertex Rb4t = 96 
    (-0.49497474549794 0.494974748163226 0.1) // Vertex Rb5t = 97 
    (1.25642756044457e-09 0.7 0.1) // Vertex Rb6t = 98 
    (0.494974747274797 0.494974746386369 0.1) // Vertex Rb7t = 99 

    (1 0 0.1) // Vertex R0t = 100 
    (0.707106781821139 -0.707106780551956 0.1) // Vertex R1t = 101 
    (0.707106781821139 -0.707106780551956 0.1) // Vertex R1st = 102 
    (1.79489651492081e-09 -1 0.1) // Vertex R2t = 103 
    (-0.707106779282772 -0.707106783090323 0.1) // Vertex R3t = 104 
    (-0.707106779282772 -0.707106783090323 0.1) // Vertex R3st = 105 
    (-1 3.58979302984161e-09 0.1) // Vertex R4t = 106 
    (-0.707106779282772 0.707106783090323 0.1) // Vertex R5t = 107 
    (-0.707106779282772 0.707106783090323 0.1) // Vertex R5st = 108 
    (1.79489651492081e-09 1 0.1) // Vertex R6t = 109 
    (0.707106781821139 0.707106780551956 0.1) // Vertex R7t = 110 
    (0.707106781821139 0.707106780551956 0.1) // Vertex R7st = 111 
);

blocks
(
    // block0
    hex (0 2 13 12 56 58 69 68)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block1
    hex (2 4 14 13 58 60 70 69)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block2
    hex (3 5 15 14 59 61 71 70)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block3
    hex (5 7 16 15 61 63 72 71)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block4
    hex (6 8 17 16 62 64 73 72)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block5
    hex (8 10 18 17 64 66 74 73)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block6
    hex (9 11 19 18 65 67 75 74)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block7
    hex (11 1 12 19 67 57 68 75)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block0
    hex (12 13 21 20 68 69 77 76)
    rotor
    (12 4 1)
    simpleGrading (1 1 1)

    // block1
    hex (13 14 22 21 69 70 78 77)
    rotor
    (12 4 1)
    simpleGrading (1 1 1)

    // block2
    hex (14 15 23 22 70 71 79 78)
    rotor
    (12 4 1)
    simpleGrading (1 1 1)

    // block3
    hex (15 16 24 23 71 72 80 79)
    rotor
    (12 4 1)
    simpleGrading (1 1 1)

    // block4
    hex (16 17 25 24 72 73 81 80)
    rotor
    (12 4 1)
    simpleGrading (1 1 1)

    // block5
    hex (17 18 26 25 73 74 82 81)
    rotor
    (12 4 1)
    simpleGrading (1 1 1)

    // block6
    hex (18 19 27 26 74 75 83 82)
    rotor
    (12 4 1)
    simpleGrading (1 1 1)

    // block7
    hex (19 12 20 27 75 68 76 83)
    rotor
    (12 4 1)
    simpleGrading (1 1 1)

    // block0
    hex (28 29 37 36 84 85 93 92)
    stator
    (12 4 1)
    simpleGrading (1 1 1)

    // block1
    hex (29 30 38 37 85 86 94 93)
    stator
    (12 4 1)
    simpleGrading (1 1 1)

    // block2
    hex (30 31 39 38 86 87 95 94)
    stator
    (12 4 1)
    simpleGrading (1 1 1)

    // block3
    hex (31 32 40 39 87 88 96 95)
    stator
    (12 4 1)
    simpleGrading (1 1 1)

    // block4
    hex (32 33 41 40 88 89 97 96)
    stator
    (12 4 1)
    simpleGrading (1 1 1)

    // block5
    hex (33 34 42 41 89 90 98 97)
    stator
    (12 4 1)
    simpleGrading (1 1 1)

    // block6
    hex (34 35 43 42 90 91 99 98)
    stator
    (12 4 1)
    simpleGrading (1 1 1)

    // block7
    hex (35 28 36 43 91 84 92 99)
    stator
    (12 4 1)
    simpleGrading (1 1 1)

    // block0
    hex (36 37 46 44 92 93 102 100)
    stator
    (12 12 1)
    simpleGrading (1 1 1)

    // block1
    hex (37 38 47 45 93 94 103 101)
    stator
    (12 12 1)
    simpleGrading (1 1 1)

    // block2
    hex (38 39 49 47 94 95 105 103)
    stator
    (12 12 1)
    simpleGrading (1 1 1)

    // block3
    hex (39 40 50 48 95 96 106 104)
    stator
    (12 12 1)
    simpleGrading (1 1 1)

    // block4
    hex (40 41 52 50 96 97 108 106)
    stator
    (12 12 1)
    simpleGrading (1 1 1)

    // block5
    hex (41 42 53 51 97 98 109 107)
    stator
    (12 12 1)
    simpleGrading (1 1 1)

    // block6
    hex (42 43 55 53 98 99 111 109)
    stator
    (12 12 1)
    simpleGrading (1 1 1)

    // block7
    hex (43 36 44 54 99 92 100 110)
    stator
    (12 12 1)
    simpleGrading (1 1 1)
);

edges
(
    arc 0 2 (0.184775906536601 -0.0765366863901046 0)
    arc 2 4 (0.0765366867217582 -0.184775906399226 0)
    arc 3 5 (-0.076536686058451 -0.184775906673977 0)
    arc 5 7 (-0.18477590626185 -0.0765366870534118 0)
    arc 6 8 (-0.18477590626185 0.0765366870534118 0)
    arc 8 10 (-0.076536686058451 0.184775906673977 0)
    arc 9 11 (0.0765366867217582 0.184775906399226 0)
    arc 11 1 (0.184775906536601 0.0765366863901046 0)

    arc 12 13 (0.461939766341503 -0.191341715975262 0)
    arc 13 14 (0.191341716804395 -0.461939765998065 0)
    arc 14 15 (-0.191341715146127 -0.461939766684942 0)
    arc 15 16 (-0.461939765654626 -0.19134171763353 0)
    arc 16 17 (-0.461939765654626 0.19134171763353 0)
    arc 17 18 (-0.191341715146127 0.461939766684942 0)
    arc 18 19 (0.191341716804395 0.461939765998065 0)
    arc 19 12 (0.461939766341503 0.191341715975262 0)

    arc 20 21 (0.554327719609804 -0.229610059170314 0)
    arc 21 22 (0.229610060165275 -0.554327719197677 0)
    arc 22 23 (-0.229610058175353 -0.55432772002193 0)
    arc 23 24 (-0.554327718785551 -0.229610061160235 0)
    arc 24 25 (-0.554327718785551 0.229610061160235 0)
    arc 25 26 (-0.229610058175353 0.55432772002193 0)
    arc 26 27 (0.229610060165275 0.554327719197677 0)
    arc 27 20 (0.554327719609804 0.229610059170314 0)

    arc 28 29 (0.554327719609804 -0.229610059170314 0)
    arc 29 30 (0.229610060165275 -0.554327719197677 0)
    arc 30 31 (-0.229610058175353 -0.55432772002193 0)
    arc 31 32 (-0.554327718785551 -0.229610061160235 0)
    arc 32 33 (-0.554327718785551 0.229610061160235 0)
    arc 33 34 (-0.229610058175353 0.55432772002193 0)
    arc 34 35 (0.229610060165275 0.554327719197677 0)
    arc 35 28 (0.554327719609804 0.229610059170314 0)

    arc 36 37 (0.646715672878104 -0.267878402365366 0)
    arc 37 38 (0.267878403526154 -0.64671567239729 0)
    arc 38 39 (-0.267878401204578 -0.646715673358918 0)
    arc 39 40 (-0.646715671916476 -0.267878404686941 0)
    arc 40 41 (-0.646715671916476 0.267878404686941 0)
    arc 41 42 (-0.267878401204578 0.646715673358918 0)
    arc 42 43 (0.267878403526154 0.64671567239729 0)
    arc 43 36 (0.646715672878104 0.267878402365366 0)

    arc 44 46 (0.923879532683006 -0.382683431950523 0)
    arc 45 47 (0.382683433608791 -0.923879531996129 0)
    arc 47 49 (-0.382683430292255 -0.923879533369883 0)
    arc 48 50 (-0.923879531309252 -0.382683435267059 0)
    arc 50 52 (-0.923879531309252 0.382683435267059 0)
    arc 51 53 (-0.382683430292255 0.923879533369883 0)
    arc 53 55 (0.382683433608791 0.923879531996129 0)
    arc 54 44 (0.923879532683006 0.382683431950523 0)

    arc 56 58 (0.184775906536601 -0.0765366863901046 0.1)
    arc 58 60 (0.0765366867217582 -0.184775906399226 0.1)
    arc 59 61 (-0.076536686058451 -0.184775906673977 0.1)
    arc 61 63 (-0.18477590626185 -0.0765366870534118 0.1)
    arc 62 64 (-0.18477590626185 0.0765366870534118 0.1)
    arc 64 66 (-0.076536686058451 0.184775906673977 0.1)
    arc 65 67 (0.0765366867217582 0.184775906399226 0.1)
    arc 67 57 (0.184775906536601 0.0765366863901046 0.1)

    arc 68 69 (0.461939766341503 -0.191341715975262 0.1)
    arc 69 70 (0.191341716804395 -0.461939765998065 0.1)
    arc 70 71 (-0.191341715146127 -0.461939766684942 0.1)
    arc 71 72 (-0.461939765654626 -0.19134171763353 0.1)
    arc 72 73 (-0.461939765654626 0.19134171763353 0.1)
    arc 73 74 (-0.191341715146127 0.461939766684942 0.1)
    arc 74 75 (0.191341716804395 0.461939765998065 0.1)
    arc 75 68 (0.461939766341503 0.191341715975262 0.1)

    arc 76 77 (0.554327719609804 -0.229610059170314 0.1)
    arc 77 78 (0.229610060165275 -0.554327719197677 0.1)
    arc 78 79 (-0.229610058175353 -0.55432772002193 0.1)
    arc 79 80 (-0.554327718785551 -0.229610061160235 0.1)
    arc 80 81 (-0.554327718785551 0.229610061160235 0.1)
    arc 81 82 (-0.229610058175353 0.55432772002193 0.1)
    arc 82 83 (0.229610060165275 0.554327719197677 0.1)
    arc 83 76 (0.554327719609804 0.229610059170314 0.1)

    arc 84 85 (0.554327719609804 -0.229610059170314 0.1)
    arc 85 86 (0.229610060165275 -0.554327719197677 0.1)
    arc 86 87 (-0.229610058175353 -0.55432772002193 0.1)
    arc 87 88 (-0.554327718785551 -0.229610061160235 0.1)
    arc 88 89 (-0.554327718785551 0.229610061160235 0.1)
    arc 89 90 (-0.229610058175353 0.55432772002193 0.1)
    arc 90 91 (0.229610060165275 0.554327719197677 0.1)
    arc 91 84 (0.554327719609804 0.229610059170314 0.1)

    arc 92 93 (0.646715672878104 -0.267878402365366 0.1)
    arc 93 94 (0.267878403526154 -0.64671567239729 0.1)
    arc 94 95 (-0.267878401204578 -0.646715673358918 0.1)
    arc 95 96 (-0.646715671916476 -0.267878404686941 0.1)
    arc 96 97 (-0.646715671916476 0.267878404686941 0.1)
    arc 97 98 (-0.267878401204578 0.646715673358918 0.1)
    arc 98 99 (0.267878403526154 0.64671567239729 0.1)
    arc 99 92 (0.646715672878104 0.267878402365366 0.1)

    arc 100 102 (0.923879532683006 -0.382683431950523 0.1)
    arc 101 103 (0.382683433608791 -0.923879531996129 0.1)
    arc 103 105 (-0.382683430292255 -0.923879533369883 0.1)
    arc 104 106 (-0.923879531309252 -0.382683435267059 0.1)
    arc 106 108 (-0.923879531309252 0.382683435267059 0.1)
    arc 107 109 (-0.382683430292255 0.923879533369883 0.1)
    arc 109 111 (0.382683433608791 0.923879531996129 0.1)
    arc 110 100 (0.923879532683006 0.382683431950523 0.1)
);

boundary
(
    rotor
    {
        type            wall;
        faces
        (
            (0 2 58 56)
            (2 4 60 58)
            (3 5 61 59)
            (5 7 63 61)
            (6 8 64 62)
            (8 10 66 64)
            (9 11 67 65)
            (11 1 57 67)

            (0 12 68 56)
            (1 12 68 57)

            (3 14 70 59)
            (4 14 70 60)

            (6 16 72 62)
            (7 16 72 63)

            (9 18 74 65)
            (10 18 74 66)
        );
    }

    stator
    {
        type            wall;
        faces
        (
            (44 46 102 100)
            (45 47 103 101)
            (47 49 105 103)
            (48 50 106 104)
            (50 52 108 106)
            (51 53 109 107)
            (53 55 111 109)
            (54 44 100 110)

            (45 37 93 101)
            (46 37 93 102)

            (48 39 95 104)
            (49 39 95 105)

            (51 41 97 107)
            (52 41 97 108)

            (54 43 99 110)
            (55 43 99 111)
        );
    }

    AMI1
    {
        type            cyclicAMI;
        neighbourPatch  AMI2;
        ordering        noOrdering;
/* optional
        surface
        {
            type            searchableCylinder; // none
            point1          (0 0 -1);
            point2          (0 0 1);
            radius          0.5;
        }
*/
        faces
        (
            (21 20 76 77)
            (22 21 77 78)
            (23 22 78 79)
            (24 23 79 80)
            (25 24 80 81)
            (26 25 81 82)
            (27 26 82 83)
            (20 27 83 76)
        );
    }

    AMI2
    {
        type            cyclicAMI;
        neighbourPatch  AMI1;
        ordering        noOrdering;
/* optional
        surface
        {
            type            searchableCylinder; // none
            point1          (0 0 -1);
            point2          (0 0 1);
            radius          0.5;
        }
*/
        faces
        (
            (29 28 84 85)
            (30 29 85 86)
            (31 30 86 87)
            (32 31 87 88)
            (33 32 88 89)
            (34 33 89 90)
            (35 34 90 91)
            (28 35 91 84)
        );
    }

    front
    {
        type            empty;
        faces
        (
            (56 58 69 68)
            (58 60 70 69)
            (59 61 71 70)
            (61 63 72 71)
            (62 64 73 72)
            (64 66 74 73)
            (65 67 75 74)
            (67 57 68 75)
            (68 69 77 76)
            (69 70 78 77)
            (70 71 79 78)
            (71 72 80 79)
            (72 73 81 80)
            (73 74 82 81)
            (74 75 83 82)
            (75 68 76 83)
            (84 85 93 92)
            (85 86 94 93)
            (86 87 95 94)
            (87 88 96 95)
            (88 89 97 96)
            (89 90 98 97)
            (90 91 99 98)
            (91 84 92 99)
            (92 93 102 100)
            (93 94 103 101)
            (94 95 105 103)
            (95 96 106 104)
            (96 97 108 106)
            (97 98 109 107)
            (98 99 111 109)
            (99 92 100 110)
        );
    }

    back
    {
        type            empty;
        faces
        (
            (0 12 13 2)
            (2 13 14 4)
            (3 14 15 5)
            (5 15 16 7)
            (6 16 17 8)
            (8 17 18 10)
            (9 18 19 11)
            (11 19 12 1)
            (12 20 21 13)
            (13 21 22 14)
            (14 22 23 15)
            (15 23 24 16)
            (16 24 25 17)
            (17 25 26 18)
            (18 26 27 19)
            (19 27 20 12)
            (28 36 37 29)
            (29 37 38 30)
            (30 38 39 31)
            (31 39 40 32)
            (32 40 41 33)
            (33 41 42 34)
            (34 42 43 35)
            (35 43 36 28)
            (36 44 46 37)
            (37 45 47 38)
            (38 47 49 39)
            (39 48 50 40)
            (40 50 52 41)
            (41 51 53 42)
            (42 53 55 43)
            (43 54 44 36)
        );
    }
);

// ************************************************************************* //
